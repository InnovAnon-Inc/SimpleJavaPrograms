<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.innovanon.sjp</groupId>
	<artifactId>sjp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Simple Java Programs</name>
	<description>Simple Java Programs Parent POM for Maven</description>
	<url>https://github.com/InnovAnon-Inc/SimpleJavaPrograms</url>
	<inceptionYear>2020</inceptionYear>

	<parent>
		<groupId>com.innovanon</groupId>
		<artifactId>ia</artifactId>
		<version>0.0.18-SNAPSHOT</version>
	</parent>
	
	<contributors>
		<contributor>
			<name>S.T.</name>
			<email></email>
			<url></url>
			<organization></organization>
			<organizationUrl></organizationUrl>
			<roles>
				<role>Assistant Project Manager</role>
				<role>Research Assistant</role>
				<role>Junior Software Architect</role>
				<role>Junior Software Engineer</role>
				<role>Junior Dev Ops Engineer</role>
				<role>Assistant Graphic Designer</role>
				<role>Assistant Film Score Producer</role>
			</roles>
			<timezone>America/Chicago</timezone>
			<properties>
				<picUrl></picUrl>
			</properties>
		</contributor>
	</contributors>
	
	<modules>
		<module>util</module>
		<module>letter_grade</module>
		<module>numerical_comparison</module>
	</modules>
	
	<scm>
		<url>https://github.com/${repo.user}/${repo.name}</url>
		<connection>scm:git:ssh://git@github.com/${repo.user}/${repo.name}.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/${repo.user}/${repo.name}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>Github Issues</system>
		<url>https://github.com/${repo.user}/${repo.name}/issues</url>
	</issueManagement>

	<ciManagement>
		<system>CircleCI</system>
		<url>https://app.circleci.com/pipelines/github/${repo.user}/${repo.name}</url>
		<notifiers>
			<notifier>
				<address>InnovAnon-Inc@protonmail.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon-Inc@gmx.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon-Inc@tutanota.com</address>
				<type>mail</type>
			</notifier>
			<notifier>
				<address>InnovAnon@mailfence.com</address>
				<type>mail</type>
			</notifier>
		</notifiers>
	</ciManagement>
	
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
        <site>
			<id>gh-pages</id>
			<name>Github</name>
			<url>scm:git:ssh://git@github.com/${repo.user}/${repo.name}.git</url>
		</site>
    </distributionManagement>
    
	<repositories>
		<repository>
			<id>mvn-repo-pp</id>
			<url>https://raw.github.com/InnovAnon-Inc/IA/mvn-repo/</url>
		</repository>
		<repository>
			<id>mvn-repo</id>
			<url>https://raw.github.com/${repo.user}/${repo.name}/mvn-repo/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<properties>
		<!--<repo.user>InnovAnon-Inc</repo.user>-->
		<repo.name>SimpleJavaPrograms</repo.name>
	</properties>

	<build>
		<!--<defaultGoal>deploy</defaultGoal>-->
		
		<!-- BlueJ compatibility: main sources live in src/ instead of src/main/java -->
		<sourceDirectory>${project.basedir}</sourceDirectory>
		<!-- BlueJ compatibility: test sources live in src/ instead of src/test/java -->
		<testSourceDirectory>${project.basedir}</testSourceDirectory>
		<resources>
			<resource>
				<!-- BlueJ compatibility: resources live in src/ instead of src/main/resources -->
				<directory>${project.basedir}</directory>
				<excludes>
					<!-- BlueJ compatibility: ignore .class files that may end up in the source tree -->
					<exclude>**/*.class</exclude>
					<!-- source files are not resources -->
					<exclude>**/*.java</exclude>
					<!-- ignore test sources -->
					<exclude>**/*Test.*</exclude>
					<!-- ignore test resources -->
					<exclude>**/*test.*</exclude>
					<exclude>**/target**</exclude>
					<!-- SCM -->
					<exclude>**/.git/**</exclude>
					<exclude>**/.gitignore</exclude>
					<!-- IDE metadata -->
					<exclude>**/package.bluej</exclude>
					<exclude>**/*.ctxt</exclude>
					<exclude>**/team.defs</exclude>
					<exclude>**/bluej.pkg</exclude>
					<!-- miscellaneous metadata -->
					<exclude>README.md</exclude>
					<exclude>LICENSE</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<!-- BlueJ compatibility: test resources live in src/ instead of src/test/resources -->
				<directory>${project.basedir}</directory>
				<excludes>
					<!-- source files are not test resources -->
					<exclude>**/*.java</exclude>
					<!-- BlueJ compatibility: ignore .class files that may end up in the test source tree -->
					<exclude>**/*.class</exclude>
					<exclude>**/target/**</exclude>
					<!-- SCM -->
					<exclude>**/.git/**</exclude>
					<exclude>**/.gitignore</exclude>
					<!-- IDE metadata -->
					<exclude>**/package.bluej</exclude>
					<exclude>**/*.ctxt</exclude>
					<exclude>**/team.defs</exclude>
					<exclude>**/bluej.pkg</exclude>
					<!-- miscellaneous metadata -->
					<exclude>README.md</exclude>
					<exclude>LICENSE</exclude>
				</excludes>
			</testResource>
		</testResources>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<inherited>true</inherited>
					<executions>
						<execution>
							<id>default-compile</id>
							<configuration>
								<!--<includes>
									<include>**/*.java</include>
								</includes>-->
								<!-- BlueJ compatibility: exclude test sources and .class files -->
								<excludes>
									<exclude>**/*Test.java</exclude>
									<exclude>**/*.class</exclude>
									<exclude>**/target/**</exclude>
									<!-- SCM -->
									<exclude>**/.git/**</exclude>
									<exclude>**/.gitignore</exclude>
									<!-- IDE metadata -->
									<exclude>**/package.bluej</exclude>
									<exclude>**/*.ctxt</exclude>
									<exclude>**/team.defs</exclude>
									<exclude>**/bluej.pkg</exclude>
									<!-- miscellaneous metadata -->
									<exclude>README.md</exclude>
									<exclude>LICENSE</exclude>
								</excludes>
							</configuration>
							<goals>
								<goal>compile</goal>
							</goals>
							<phase>compile</phase>
						</execution>
						<execution>
							<id>default-testCompile</id>
							<configuration>
								<!-- BlueJ compatibility: include test sources -->
								<testIncludes>
									<testInclude>**/*Test.java</testInclude>
								</testIncludes>
								<!-- BlueJ compatibility: exclude .class files -->
								<testExcludes>
									<testExclude>**/*.class</testExclude>
									<testExclude>**/target/**</testExclude>
									<!-- SCM -->
									<testExclude>**/.git/**</testExclude>
									<testExclude>**/.gitignore</testExclude>
									<!-- IDE metadata -->
									<testExclude>**/package.bluej</testExclude>
									<testExclude>**/*.ctxt</testExclude>
									<testExclude>**/team.defs</testExclude>
									<testExclude>**/bluej.pkg</testExclude>
									<!-- miscellaneous metadata -->
									<testExclude>README.md</testExclude>
									<testExclude>LICENSE</testExclude>
								</testExcludes>
							</configuration>
							<goals>
								<goal>testCompile</goal>
							</goals>
							<phase>test-compile</phase>
						</execution>
					</executions>
				</plugin>
				<!--
				<plugin>
					<inherited>true</inherited>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
					<configuration combine.self="override">
						<repositoryName>${repo.name}</repositoryName>
						<repositoryOwner>${repo.user}</repositoryOwner>
					</configuration>
				</plugin>
				-->
				<plugin>
					<inherited>true</inherited>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${site-maven-plugin.version}</version>
					<configuration>
						<repositoryOwner>${repo.user}</repositoryOwner>
						<repositoryName>${repo.name}</repositoryName>
					</configuration>
					<executions>
						<execution>
							<id>mvn-repo</id>
							<configuration>
								<description>[ci skip] Repo ${project.name} build, ${project.version} release</description>
								<message>[ci skip] Official ${project.name} build</message>
								<noJekyll>true</noJekyll>
								<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
								<branch>refs/heads/mvn-repo</branch>
								<includes><include>**/*</include></includes>
								<merge>true</merge>
							</configuration>
							<goals>
								<goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
			<!--
			<plugin>
				<inherited>true</inherited>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>${site-maven-plugin.version}</version>
			</plugin>
			-->
		</plugins>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets combine.self="override">
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>modules</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>aggregate</report>
							<report>test-aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<inherited>false</inherited>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
